name: Submodule Matrix
on:
    pull_request:

jobs:
    prepare:
      runs-on: ubuntu-latest
      outputs:
        submodules: ${{ steps.list-submodules.outputs.submodules }}
      steps:
        - uses: actions/checkout@v3
        - name: List submodules
          id: list-submodules
          run: |
            {
              echo '['
              git submodule | sed -e 's/^-//g' | awk 'BEGIN{ ORS = "" }{print "{ \"hash\":\"xxx\", \"repo\":\"" $2 "\" }" }'
              echo ']'
            } | sed -e 's/}{/},{/g' | tee submodules.txt
            echo "submodules=$(jq -csR < submodules.txt)" >> "${GITHUB_OUTPUT}"
        - name: dump
          run: |
            echo "${{ fromJson(steps.list-submodules.outputs.submodules) }}"

    submoudles-job:
      runs-on: ubuntu-latest
      needs: prepare
      strategy:
        matrix:
            include: "${{ fromJson(needs.prepare.outputs.submodules) }}"
      steps:
        - run: |
            echo "${{ matrix.repo }}: ${{ matrix.hash }}"

    job1:
      runs-on: ubuntu-latest
      outputs:
        matrix: ${{ steps.set-matrix.outputs.matrix }}
      steps:
        - id: set-matrix
          run: echo "matrix={\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}" >> $GITHUB_OUTPUT
        - name: dump
          run: |
            echo "${{ fromJson(steps.set-matrix.outputs.matrix) }}"
    job2:
      needs: job1
      runs-on: ubuntu-latest
      strategy:
        matrix: ${{ fromJSON(needs.job1.outputs.matrix) }}
      steps:
        - run: build
